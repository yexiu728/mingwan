
1、函数的三种写法
    函数表达式（匿名函数）-没有名字的函数
        由于美元名字，不知道如何去调用，所以可以把它赋值给一个变量，
        根据变量名来调用这个函数
        var f = function() {}
    函数声明
        function f() {}
    函数对象
        var f = new Function();

2、全等于的比较 ===
    全等于先比较类型是否相同，再比较值是否相等
    对象与对象之间比较的是地址值
        object、function
    5大基本类型比较的是内容
        number、string、boolean、null、undefined

3、作用域
    局部作用域
        被函数包围起来的叫局部作用域，局部作用域内部创建的变量叫局部变量
        函数内部优先访问局部变量
    全局作用域
        在<script>标签的顶级，或者js外部文件的顶级，不能被函数包裹

4、作用域链（就近原则）
    1、函数内部优先访问局部变量
    2、如果函数内部没有，就往上一级局部作用域查找
    3、最终查找到全局作用域，如果全局作用域中都没有，就会报错
        函数内部声明的变量，只能给函数内部使用

5、变量赋值
    创建一个变量，但是没有给它赋值
        var 变量名;
    赋值
        变量名 = 值;
    变量可以重复赋值，后赋值的会覆盖前面的值

6、预解析
    在JavaScript运行代码之前，优先进行代码预解析，与解析完成后，代码再从上往下执行
    1、var 变量声明，创建变量的过程提升到作用域最前面
    2、function 函数声明，函数创建的过程提升到作用域的最前面

7、声明变量的三种方式
    var 变量名
        相对于它的作用域是一个全局变量
    let 变量名
        局部变量
        不参与预解析
        只能在let 后使用这个变量，如果在let 之前使用会报错 Cannot access '变量' before initialization
    const 变量名
        常量（不可改变的量），不能重复赋值
        可以避免一个变量重复赋值
        不参与预解析
        只能在const后使用这个变量，如果在const后使用会报错 Cannot access '变量' before initialization
