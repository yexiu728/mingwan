正则表达式学习方法：

1、what? why? where?

	what? :可以说是一种字符串表达形式的规则，可以检测指定字符串是否
	       符合规则，如果符合返回true、不符合返回false

	why?  :因为要限定字符串的表现形式

	where?:很多高级语言都支持正则表达式，我们主要学习在html中去实现
	       对表单的验证

2、组成规则？

	单个字符：[ ]   如：[a]、[ab]、[a-zA-Z0-9_]

	邮箱：
	一串英文或数字@一串英文或数字.两个到三个英文
	\w{5,9}@\w{2,3}.[a-z]{2,3}

	特殊符号：用来代表特殊含义的单个字符
	      如：
		单个数字字符：\d -->[0-9]
		单个单词字符：\w -->[a-zA-Z0-9_]

	量词（数量）：
	    不确定次数：
		*：允许出现0次或者多次
		+：允许出现1次或者多次
		?：允许出现0次或者1次
	    确定次数：
		{x,y}:最少出现x次，最多出现y次
		{x,}:最少出现x次
		{x}：必须出现x次
	    注意：
		量词前没有区间则表示只对前一个字符有效

	边界符号：
		^：以指定字符开头
		$：以指定字符结尾
		^正则表达式$：进行全局检索，必须完全符合正则规则

	匹配模式：
		i：匹配过程中忽略大小写
		g：进行全局匹配
		
3、如何创建？

	方式一：
		var str=username;
		var reg=new regExp("正则表达式"/str);
	方式二：
		var reg=/正则表达式/	; 
	区别：
		第一种方式是字符串格式，\符号需要转义。字符串可以定义成一个变量
		第二种方式是固定的写法，\符号不需要转义。

4、怎么用？

	正则对象.test("用户输入的字符串")：用于判断参数字符串是否与正则表达式匹配，匹配成功返回true
			匹配不成功返回false	

